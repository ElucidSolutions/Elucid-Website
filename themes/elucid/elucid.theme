<?php
/*
  Sets template variables and defines other
  event handlers.
*/
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_block ().
 *
 * Ensures that every block element includes
 * its block ID in a data attribute.
 */
function elucid_preprocess_block (&$variables) {
  $variables ['attributes']['data-elucid-plugin-id']            = $variables ['plugin_id'];
  $variables ['attributes']['data-elucid-derivative-plugin-id'] = $variables ['derivative_plugin_id'];
  $variables ['attributes']['data-elucid-base-plugin-id']       = $variables ['base_plugin_id'];
}

/**
 * Implements hook_preprocess_views_view ().
 *
 * Ensures that every view element includes its
 * view ID in a data attribute.
 */
function elucid_preprocess_views_view (&$variables) {
  $variables ['attributes']['data-elucid-view-id'] = $variables ['id'];
}

/**
 * Implements hook_preprocess_page ().
 *
 * Expose node/view IDs as template variables.
 */
function elucid_preprocess_page (&$variables) {
  $current_path = \Drupal::service ('path.current')->getPath ();
  $variables ['elucid_page_path'] = $current_path;
  $variables ['elucid_page_path_alias'] = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  if (isset ($variables ['node'])) {
    $variables ['elucid_node_type'] = $variables ['node']->getType ();
    $variables ['elucid_node_id']   = $variables ['node']->id ();
  }
  $parameters = \Drupal::routeMatch ()->getParameters ();
  if ($parameters->has ('view_id')) {
    $variables ['elucid_view_id'] = $parameters->get ('view_id');
  }
}

/**
 *  Implements hook_form_FORM_ID_alter ().
 */
function elucid_form_contact_message_feedback_form_alter (&$form, &$form_state, $form_id) {
  $form ['actions']['submit']['#value'] = 'Send';
}
